CREATE TABLE ml.chapters (
    chapter character varying,
    description character varying
);
CREATE TABLE ml.commodity_friendly_names (
    goods_nomenclature_item_id character varying(10),
    description text
);
CREATE TABLE ml.config (
    last_exported_operation_date timestamp without time zone,
    last_transaction_id integer
);
CREATE TABLE public.base_regulations (
    base_regulation_role integer,
    base_regulation_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    community_code integer,
    regulation_group_id character varying(255),
    replacement_indicator integer,
    stopped_flag boolean,
    information_text text,
    approved_flag boolean,
    published_date date,
    officialjournal_number character varying(255),
    officialjournal_page integer,
    effective_end_date timestamp without time zone,
    antidumping_regulation_role integer,
    related_antidumping_regulation_id character varying(255),
    complete_abrogation_regulation_role integer,
    complete_abrogation_regulation_id character varying(255),
    explicit_abrogation_regulation_role integer,
    explicit_abrogation_regulation_id character varying(255),
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.modification_regulations (
    modification_regulation_role integer,
    modification_regulation_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    published_date date,
    officialjournal_number character varying(255),
    officialjournal_page integer,
    base_regulation_role integer,
    base_regulation_id character varying(255),
    replacement_indicator integer,
    stopped_flag boolean,
    information_text text,
    approved_flag boolean,
    explicit_abrogation_regulation_role integer,
    explicit_abrogation_regulation_id character varying(8),
    effective_end_date timestamp without time zone,
    complete_abrogation_regulation_role integer,
    complete_abrogation_regulation_id character varying(8),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_action_descriptions (
    action_code character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_actions (
    action_code character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.certificate_type_descriptions (
    certificate_type_code character varying(1),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.certificate_types (
    certificate_type_code character varying(1),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.goods_nomenclatures (
    goods_nomenclature_sid integer,
    goods_nomenclature_item_id character varying(10),
    producline_suffix character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    statistical_indicator integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_components (
    measure_sid integer,
    duty_expression_id character varying(255),
    duty_amount double precision,
    monetary_unit_code character varying(255),
    measurement_unit_code character varying(3),
    measurement_unit_qualifier_code character varying(1),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    original_duty_expression_id text
);
CREATE TABLE public.measures (
    measure_sid integer,
    measure_type_id character varying(3),
    geographical_area_id character varying(255),
    goods_nomenclature_item_id character varying(10),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    measure_generating_regulation_role integer,
    measure_generating_regulation_id character varying(255),
    justification_regulation_role integer,
    justification_regulation_id character varying(255),
    stopped_flag boolean,
    geographical_area_sid integer,
    goods_nomenclature_sid integer,
    ordernumber character varying(255),
    additional_code_type_id text,
    additional_code_id character varying(3),
    additional_code_sid integer,
    reduction_indicator integer,
    export_refund_nomenclature_sid integer,
    created_at timestamp without time zone,
    "national" boolean,
    tariff_measure_number character varying(10),
    invalidated_by integer,
    invalidated_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    status text,
    last_status_change_at timestamp without time zone,
    last_update_by_id integer,
    updated_at timestamp without time zone,
    workbasket_id integer,
    searchable_data jsonb DEFAULT '{}'::jsonb,
    searchable_data_updated_at timestamp without time zone,
    workbasket_sequence_number integer,
    original_measure_sid text
);
CREATE TABLE public.certificate_descriptions (
    certificate_description_period_sid integer,
    language_id character varying(5),
    certificate_type_code character varying(1),
    certificate_code character varying(3),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.certificates (
    certificate_type_code character varying(1),
    certificate_code character varying(3),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    national_abbrev text,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.measure_conditions (
    measure_condition_sid integer,
    measure_sid integer,
    condition_code character varying(255),
    component_sequence_number integer,
    condition_duty_amount double precision,
    condition_monetary_unit_code character varying(255),
    condition_measurement_unit_code character varying(3),
    condition_measurement_unit_qualifier_code character varying(1),
    action_code character varying(255),
    certificate_type_code character varying(1),
    certificate_code character varying(3),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    original_measure_condition_code text
);
CREATE TABLE public.geographical_area_memberships (
    geographical_area_sid integer,
    geographical_area_group_sid integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.geographical_areas (
    geographical_area_sid integer,
    parent_geographical_area_group_sid integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    geographical_code character varying(255),
    geographical_area_id character varying(255),
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.geographical_area_descriptions (
    geographical_area_description_period_sid integer,
    language_id character varying(5),
    geographical_area_sid integer,
    geographical_area_id character varying(255),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.measure_condition_code_descriptions (
    condition_code character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_condition_codes (
    condition_code character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_type_descriptions (
    measure_type_id character varying(3),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_types (
    measure_type_id character varying(3),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    trade_movement_code integer,
    priority_code integer,
    measure_component_applicable_code integer,
    origin_dest_code integer,
    order_number_capture_code integer,
    measure_explosion_level integer,
    measure_type_series_id character varying(255),
    created_at timestamp without time zone,
    "national" boolean,
    measure_type_acronym character varying(3),
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE ml.deleted_goods_nomenclatures (
    goods_nomenclature_sid integer,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(255)
);
CREATE TABLE ml.deleted_goods_nomenclatures_old (
    goods_nomenclature_sid integer NOT NULL,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(255)
);
CREATE TABLE ml.eu_measure_conditions (
    measure_condition_sid integer
);
CREATE TABLE ml.eu_measures (
    measure_sid integer
);
CREATE TABLE ml.eu_quota_definitions (
    quota_definition_sid integer
);
CREATE TABLE ml.eu_quota_order_number_origins (
    quota_order_number_origin_sid integer
);
CREATE TABLE ml.extended_trade_agreement_information (
    fta_name character varying(50) NOT NULL,
    geographical_area_name character varying(50),
    agreement_title text,
    agreement_date character varying(20),
    version character varying(10),
    country_codes character varying(50),
    origin_quotas text,
    licensed_quota_volumes text,
    quota_scope text,
    quota_staging text
);
CREATE TABLE ml.import_files (
    import_file character varying(255),
    import_started timestamp without time zone,
    import_completed timestamp without time zone,
    status character varying
);
CREATE TABLE ml.meursing (
    measure_sid integer,
    measure_type_id character varying(3),
    additional_code_id character varying(3),
    duty_amount double precision,
    geographical_area_id character varying(255),
    reduction_indicator integer
);
CREATE TABLE public.additional_code_descriptions (
    additional_code_description_period_sid integer,
    language_id character varying(5),
    additional_code_sid integer,
    additional_code_type_id character varying(1),
    additional_code character varying(3),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.additional_codes (
    additional_code_sid integer,
    additional_code_type_id character varying(1),
    additional_code character varying(3),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE ml.ml_nomenclature_flat (
    goods_nomenclature_item_id character varying(255),
    product_line_suffix character varying(255),
    description text,
    number_indents integer
);
CREATE TABLE ml.ml_regulation_titles (
    regulation_id character varying,
    title text,
    regulation_type character varying,
    primary_owner character varying,
    keywords character varying,
    geography character varying,
    comments character varying,
    prognosis character varying,
    uk_base_regulation_id character varying
);
CREATE TABLE public.footnote_descriptions (
    footnote_description_period_sid integer,
    footnote_type_id character varying(2),
    footnote_id character varying(5),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnotes (
    footnote_id character varying(5),
    footnote_type_id character varying(2),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.goods_nomenclature_descriptions (
    goods_nomenclature_description_period_sid integer,
    language_id character varying(5),
    goods_nomenclature_sid integer,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE ml.quota_descriptions (
    quota_order_number_id character varying(6) NOT NULL,
    geographical_area_id character varying(4),
    description character varying(500)
);
CREATE TABLE ml.uk_regulations (
    uk_base_regulation_id character varying(8),
    title text,
    notes text,
    url text,
    uk_identifier text
);
CREATE TABLE public.additional_code_description_periods (
    additional_code_description_period_sid integer,
    additional_code_sid integer,
    additional_code_type_id character varying(1),
    additional_code character varying(3),
    validity_start_date timestamp without time zone,
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.additional_code_type_descriptions (
    additional_code_type_id character varying(1),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.additional_code_type_measure_types (
    measure_type_id character varying(3),
    additional_code_type_id character varying(1),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.additional_code_types (
    additional_code_type_id character varying(1),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    application_code character varying(255),
    meursing_table_plan_id character varying(2),
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.meursing_additional_codes (
    meursing_additional_code_sid integer,
    additional_code character varying(3),
    validity_start_date timestamp without time zone,
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.audits (
    id integer NOT NULL,
    auditable_id integer NOT NULL,
    auditable_type text NOT NULL,
    action text NOT NULL,
    changes json NOT NULL,
    version integer NOT NULL,
    created_at timestamp without time zone NOT NULL
);
CREATE TABLE public.bulk_edit_of_additional_codes_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    search_code text,
    initial_search_results_code text,
    initial_items_populated boolean DEFAULT false,
    batches_loaded jsonb DEFAULT '{}'::jsonb,
    additional_code_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);
CREATE TABLE public.bulk_edit_of_measures_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    measure_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    search_code text,
    initial_search_results_code text,
    all_batched_loaded boolean DEFAULT false,
    initial_items_populated boolean DEFAULT false,
    batches_loaded jsonb DEFAULT '{}'::jsonb
);
CREATE TABLE public.bulk_edit_of_quotas_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    initial_search_results_code text,
    initial_items_populated boolean DEFAULT false,
    batches_loaded jsonb DEFAULT '{}'::jsonb,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    initial_quota_sid integer,
    configure_quota_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    conditions_footnotes_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    configure_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    configure_quota_step_validation_passed boolean DEFAULT false,
    conditions_footnotes_step_validation_passed boolean DEFAULT false,
    measure_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    quota_period_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    parent_quota_period_sids_jsonb jsonb DEFAULT '{}'::jsonb
);
CREATE TABLE public.certificate_description_periods (
    certificate_description_period_sid integer,
    certificate_type_code character varying(1),
    certificate_code character varying(3),
    validity_start_date timestamp without time zone,
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.chapter_notes (
    id integer NOT NULL,
    section_id integer,
    chapter_id character varying(2),
    content text
);
CREATE TABLE public.chapters_sections (
    goods_nomenclature_sid integer,
    section_id integer
);
CREATE TABLE public.chief_comm (
    fe_tsmp timestamp without time zone,
    amend_indicator character varying(1),
    cmdty_code character varying(12),
    le_tsmp timestamp without time zone,
    add_rlf_alwd_ind boolean,
    alcohol_cmdty boolean,
    audit_tsmp timestamp without time zone,
    chi_doti_rqd boolean,
    cmdty_bbeer boolean,
    cmdty_beer boolean,
    cmdty_euse_alwd boolean,
    cmdty_exp_rfnd boolean,
    cmdty_mdecln boolean,
    exp_lcnc_rqd boolean,
    ex_ec_scode_rqd boolean,
    full_dty_adval1 numeric(6,3),
    full_dty_adval2 numeric(6,3),
    full_dty_exch character varying(3),
    full_dty_spfc1 numeric(8,4),
    full_dty_spfc2 numeric(8,4),
    full_dty_ttype character varying(3),
    full_dty_uoq_c2 character varying(3),
    full_dty_uoq1 character varying(3),
    full_dty_uoq2 character varying(3),
    full_duty_type character varying(2),
    im_ec_score_rqd boolean,
    imp_exp_use boolean,
    nba_id character varying(6),
    perfume_cmdty boolean,
    rfa character varying(255),
    season_end integer,
    season_start integer,
    spv_code character varying(7),
    spv_xhdg boolean,
    uoq_code_cdu1 character varying(3),
    uoq_code_cdu2 character varying(3),
    uoq_code_cdu3 character varying(3),
    whse_cmdty boolean,
    wines_cmdty boolean,
    origin character varying(30)
);
CREATE TABLE public.chief_country_code (
    chief_country_cd character varying(2),
    country_cd character varying(2)
);
CREATE TABLE public.chief_country_group (
    chief_country_grp character varying(4),
    country_grp_region character varying(4),
    country_exclusions character varying(100)
);
CREATE TABLE public.chief_duty_expression (
    id integer NOT NULL,
    adval1_rate boolean,
    adval2_rate boolean,
    spfc1_rate boolean,
    spfc2_rate boolean,
    duty_expression_id_spfc1 character varying(2),
    monetary_unit_code_spfc1 character varying(3),
    duty_expression_id_spfc2 character varying(2),
    monetary_unit_code_spfc2 character varying(3),
    duty_expression_id_adval1 character varying(2),
    monetary_unit_code_adval1 character varying(3),
    duty_expression_id_adval2 character varying(2),
    monetary_unit_code_adval2 character varying(3)
);
CREATE TABLE public.chief_measure_type_adco (
    measure_group_code character varying(2),
    measure_type character varying(3),
    tax_type_code character varying(11),
    measure_type_id character varying(3),
    adtnl_cd_type_id character varying(1),
    adtnl_cd character varying(3),
    zero_comp integer
);
CREATE TABLE public.chief_measure_type_cond (
    measure_group_code character varying(2),
    measure_type character varying(3),
    cond_cd character varying(1),
    comp_seq_no character varying(3),
    cert_type_cd character varying(1),
    cert_ref_no character varying(3),
    act_cd character varying(2)
);
CREATE TABLE public.chief_measure_type_footnote (
    id integer NOT NULL,
    measure_type_id character varying(3),
    footn_type_id character varying(2),
    footn_id character varying(3)
);
CREATE TABLE public.chief_measurement_unit (
    id integer NOT NULL,
    spfc_cmpd_uoq character varying(3),
    spfc_uoq character varying(3),
    measurem_unit_cd character varying(3),
    measurem_unit_qual_cd character varying(1)
);
CREATE TABLE public.chief_mfcm (
    fe_tsmp timestamp without time zone,
    msrgp_code character varying(5),
    msr_type character varying(5),
    tty_code character varying(5),
    le_tsmp timestamp without time zone,
    audit_tsmp timestamp without time zone,
    cmdty_code character varying(12),
    cmdty_msr_xhdg character varying(255),
    null_tri_rqd character varying(255),
    exports_use_ind boolean,
    tar_msr_no character varying(12),
    processed boolean DEFAULT false,
    amend_indicator character varying(1),
    origin character varying(30)
);
CREATE TABLE public.chief_tame (
    fe_tsmp timestamp without time zone,
    msrgp_code character varying(5),
    msr_type character varying(5),
    tty_code character varying(5),
    tar_msr_no character varying(12),
    le_tsmp timestamp without time zone,
    adval_rate numeric(8,3),
    alch_sgth numeric(8,3),
    audit_tsmp timestamp without time zone,
    cap_ai_stmt character varying(255),
    cap_max_pct numeric(8,3),
    cmdty_msr_xhdg character varying(255),
    comp_mthd character varying(255),
    cpc_wvr_phb character varying(255),
    ec_msr_set character varying(255),
    mip_band_exch character varying(255),
    mip_rate_exch character varying(255),
    mip_uoq_code character varying(255),
    nba_id character varying(255),
    null_tri_rqd character varying(255),
    qta_code_uk character varying(255),
    qta_elig_use character varying(255),
    qta_exch_rate character varying(255),
    qta_no character varying(255),
    qta_uoq_code character varying(255),
    rfa text,
    rfs_code_1 character varying(255),
    rfs_code_2 character varying(255),
    rfs_code_3 character varying(255),
    rfs_code_4 character varying(255),
    rfs_code_5 character varying(255),
    tdr_spr_sur character varying(255),
    exports_use_ind boolean,
    processed boolean DEFAULT false,
    amend_indicator character varying(1),
    origin character varying(30),
    ec_sctr character varying(10)
);
CREATE TABLE public.chief_tamf (
    fe_tsmp timestamp without time zone,
    msrgp_code character varying(5),
    msr_type character varying(5),
    tty_code character varying(5),
    tar_msr_no character varying(12),
    adval1_rate numeric(8,3),
    adval2_rate numeric(8,3),
    ai_factor character varying(255),
    cmdty_dmql numeric(8,3),
    cmdty_dmql_uoq character varying(255),
    cngp_code character varying(255),
    cntry_disp character varying(255),
    cntry_orig character varying(255),
    duty_type character varying(255),
    ec_supplement character varying(255),
    ec_exch_rate character varying(255),
    spcl_inst character varying(255),
    spfc1_cmpd_uoq character varying(255),
    spfc1_rate numeric(8,4),
    spfc1_uoq character varying(255),
    spfc2_rate numeric(8,4),
    spfc2_uoq character varying(255),
    spfc3_rate numeric(8,4),
    spfc3_uoq character varying(255),
    tamf_dt character varying(255),
    tamf_sta character varying(255),
    tamf_ty character varying(255),
    processed boolean DEFAULT false,
    amend_indicator character varying(1),
    origin character varying(30)
);
CREATE TABLE public.chief_tbl9 (
    fe_tsmp timestamp without time zone,
    amend_indicator character varying(1),
    tbl_type character varying(4),
    tbl_code character varying(10),
    txtlnno integer,
    tbl_txt character varying(100),
    origin character varying(30)
);
CREATE TABLE public.complete_abrogation_regulations (
    complete_abrogation_regulation_role integer,
    complete_abrogation_regulation_id character varying(255),
    published_date date,
    officialjournal_number character varying(255),
    officialjournal_page integer,
    replacement_indicator integer,
    information_text text,
    approved_flag boolean,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.create_additional_code_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);
CREATE TABLE public.create_certificates_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);
CREATE TABLE public.create_footnotes_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);
CREATE TABLE public.create_geographical_area_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);
CREATE TABLE public.create_measures_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    created_at time without time zone,
    updated_at time without time zone,
    duties_conditions_footnotes_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    duties_conditions_footnotes_step_validation_passed boolean DEFAULT false,
    measure_sids_jsonb jsonb DEFAULT '{}'::jsonb
);
CREATE TABLE public.create_quota_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    settings_jsonb jsonb DEFAULT '{}'::jsonb,
    measure_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    quota_period_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    configure_quota_step_validation_passed boolean DEFAULT false,
    conditions_footnotes_step_validation_passed boolean DEFAULT false,
    created_at time without time zone,
    updated_at time without time zone,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    configure_quota_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    conditions_footnotes_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    parent_quota_period_sids_jsonb jsonb DEFAULT '{}'::jsonb,
    initial_quota_sid integer,
    initial_search_results_code text
);
CREATE TABLE public.create_regulation_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);
CREATE TABLE public.data_migrations (
    filename text NOT NULL
);
CREATE TABLE public.db_rollbacks (
    id integer NOT NULL,
    state character varying(1),
    issue_date timestamp without time zone,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    date_filters text
);
CREATE TABLE public.duty_expression_descriptions (
    duty_expression_id character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.duty_expressions (
    duty_expression_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    duty_amount_applicability_code integer,
    measurement_unit_applicability_code integer,
    monetary_unit_applicability_code integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.edit_certificates_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    original_certificate_type_code text,
    original_certificate_code text
);
CREATE TABLE public.edit_footnotes_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    original_footnote_type_id text,
    original_footnote_id text
);
CREATE TABLE public.edit_geographical_areas_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    main_step_settings_jsonb jsonb DEFAULT '{}'::jsonb,
    main_step_validation_passed boolean DEFAULT false,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    original_geographical_area_sid text,
    original_geographical_area_id text
);
CREATE TABLE public.edit_nomenclature_workbasket_settings (
    id integer NOT NULL,
    workbasket_id integer,
    workbasket_name text,
    reason_for_changes text,
    validity_start_date date,
    description text,
    original_nomenclature text,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    main_step_validation_passed boolean DEFAULT false,
    original_description text
);
CREATE TABLE public.explicit_abrogation_regulations (
    explicit_abrogation_regulation_role integer,
    explicit_abrogation_regulation_id character varying(8),
    published_date date,
    officialjournal_number character varying(255),
    officialjournal_page integer,
    replacement_indicator integer,
    abrogation_date date,
    information_text text,
    approved_flag boolean,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.export_refund_nomenclature_description_periods (
    export_refund_nomenclature_description_period_sid integer,
    export_refund_nomenclature_sid integer,
    validity_start_date timestamp without time zone,
    goods_nomenclature_item_id character varying(10),
    additional_code_type text,
    export_refund_code character varying(255),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.export_refund_nomenclature_descriptions (
    export_refund_nomenclature_description_period_sid integer,
    language_id character varying(5),
    export_refund_nomenclature_sid integer,
    goods_nomenclature_item_id character varying(10),
    additional_code_type text,
    export_refund_code character varying(255),
    productline_suffix character varying(2),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.export_refund_nomenclature_indents (
    export_refund_nomenclature_indents_sid integer,
    export_refund_nomenclature_sid integer,
    validity_start_date timestamp without time zone,
    number_export_refund_nomenclature_indents integer,
    goods_nomenclature_item_id character varying(10),
    additional_code_type text,
    export_refund_code character varying(255),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.export_refund_nomenclatures (
    export_refund_nomenclature_sid integer,
    goods_nomenclature_item_id character varying(10),
    additional_code_type character varying(1),
    export_refund_code character varying(3),
    productline_suffix character varying(2),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    goods_nomenclature_sid integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_association_additional_codes (
    additional_code_sid integer,
    footnote_type_id character varying(2),
    footnote_id character varying(5),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    additional_code_type_id text,
    additional_code character varying(3),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_association_erns (
    export_refund_nomenclature_sid integer,
    footnote_type character varying(2),
    footnote_id character varying(5),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    goods_nomenclature_item_id character varying(10),
    additional_code_type text,
    export_refund_code character varying(255),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_association_goods_nomenclatures (
    goods_nomenclature_sid integer,
    footnote_type character varying(2),
    footnote_id character varying(5),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.footnote_association_measures (
    measure_sid integer,
    footnote_type_id character varying(2),
    footnote_id character varying(5),
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_association_meursing_headings (
    meursing_table_plan_id character varying(2),
    meursing_heading_number character varying(255),
    row_column_code integer,
    footnote_type character varying(2),
    footnote_id character varying(5),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_description_periods (
    footnote_description_period_sid integer,
    footnote_type_id character varying(2),
    footnote_id character varying(5),
    validity_start_date timestamp without time zone,
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_type_descriptions (
    footnote_type_id character varying(2),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.footnote_types (
    footnote_type_id character varying(2),
    application_code integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.fts_regulation_actions (
    fts_regulation_role integer,
    fts_regulation_id character varying(8),
    stopped_regulation_role integer,
    stopped_regulation_id character varying(8),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.full_temporary_stop_regulations (
    full_temporary_stop_regulation_role integer,
    full_temporary_stop_regulation_id character varying(8),
    published_date date,
    officialjournal_number character varying(255),
    officialjournal_page integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    effective_enddate date,
    explicit_abrogation_regulation_role integer,
    explicit_abrogation_regulation_id character varying(8),
    replacement_indicator integer,
    information_text text,
    approved_flag boolean,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    complete_abrogation_regulation_role integer,
    complete_abrogation_regulation_id text
);
CREATE TABLE public.geographical_area_description_periods (
    geographical_area_description_period_sid integer,
    geographical_area_sid integer,
    validity_start_date timestamp without time zone,
    geographical_area_id character varying(255),
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone
);
CREATE TABLE public.goods_nomenclature_description_periods (
    goods_nomenclature_description_period_sid integer,
    goods_nomenclature_sid integer,
    validity_start_date timestamp without time zone,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.goods_nomenclature_group_descriptions (
    goods_nomenclature_group_type character varying(1),
    goods_nomenclature_group_id character varying(6),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.goods_nomenclature_groups (
    goods_nomenclature_group_type character varying(1),
    goods_nomenclature_group_id character varying(6),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    nomenclature_group_facility_code integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.goods_nomenclature_indents (
    goods_nomenclature_indent_sid integer,
    goods_nomenclature_sid integer,
    validity_start_date timestamp without time zone,
    number_indents integer,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    validity_end_date timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.goods_nomenclature_origins (
    goods_nomenclature_sid integer,
    derived_goods_nomenclature_item_id character varying(10),
    derived_productline_suffix character varying(2),
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.goods_nomenclature_successors (
    goods_nomenclature_sid integer,
    absorbed_goods_nomenclature_item_id character varying(10),
    absorbed_productline_suffix character varying(2),
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.hidden_goods_nomenclatures (
    goods_nomenclature_item_id text,
    created_at timestamp without time zone
);
CREATE TABLE public.language_descriptions (
    language_code_id character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.languages (
    language_id character varying(5),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_condition_components (
    measure_condition_sid integer,
    duty_expression_id character varying(255),
    duty_amount double precision,
    monetary_unit_code character varying(255),
    measurement_unit_code character varying(3),
    measurement_unit_qualifier_code character varying(1),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    original_duty_expression_id text
);
CREATE TABLE public.measure_excluded_geographical_areas (
    measure_sid integer,
    excluded_geographical_area character varying(255),
    geographical_area_sid integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_partial_temporary_stops (
    measure_sid integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    partial_temporary_stop_regulation_id character varying(255),
    partial_temporary_stop_regulation_officialjournal_number character varying(255),
    partial_temporary_stop_regulation_officialjournal_page integer,
    abrogation_regulation_id character varying(255),
    abrogation_regulation_officialjournal_number character varying(255),
    abrogation_regulation_officialjournal_page integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_type_series (
    measure_type_series_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    measure_type_combination integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measure_type_series_descriptions (
    measure_type_series_id character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measurement_unit_abbreviations (
    id integer NOT NULL,
    abbreviation text,
    measurement_unit_code text,
    measurement_unit_qualifier text
);
CREATE TABLE public.measurement_unit_descriptions (
    measurement_unit_code character varying(3),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measurement_unit_qualifier_descriptions (
    measurement_unit_qualifier_code character varying(1),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measurement_unit_qualifiers (
    measurement_unit_qualifier_code character varying(1),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measurement_units (
    measurement_unit_code character varying(3),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.measurements (
    measurement_unit_code character varying(3),
    measurement_unit_qualifier_code character varying(1),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.meursing_heading_texts (
    meursing_table_plan_id character varying(2),
    meursing_heading_number integer,
    row_column_code integer,
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.meursing_headings (
    meursing_table_plan_id character varying(2),
    meursing_heading_number text,
    row_column_code integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.meursing_subheadings (
    meursing_table_plan_id character varying(2),
    meursing_heading_number integer,
    row_column_code integer,
    subheading_sequence_number integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.meursing_table_cell_components (
    meursing_additional_code_sid integer,
    meursing_table_plan_id character varying(2),
    heading_number integer,
    row_column_code integer,
    subheading_sequence_number integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    additional_code character varying(3),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.meursing_table_plans (
    meursing_table_plan_id character varying(2),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.monetary_exchange_periods (
    monetary_exchange_period_sid integer,
    parent_monetary_unit_code character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.monetary_exchange_rates (
    monetary_exchange_period_sid integer,
    child_monetary_unit_code character varying(255),
    exchange_rate numeric(16,8),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.monetary_unit_descriptions (
    monetary_unit_code character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.monetary_units (
    monetary_unit_code character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.nomenclature_group_memberships (
    goods_nomenclature_sid integer,
    goods_nomenclature_group_type character varying(1),
    goods_nomenclature_group_id character varying(6),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    goods_nomenclature_item_id character varying(10),
    productline_suffix character varying(2),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.prorogation_regulation_actions (
    prorogation_regulation_role integer,
    prorogation_regulation_id character varying(8),
    prorogated_regulation_role integer,
    prorogated_regulation_id character varying(8),
    prorogated_date date,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.prorogation_regulations (
    prorogation_regulation_role integer,
    prorogation_regulation_id character varying(255),
    published_date date,
    officialjournal_number character varying(255),
    officialjournal_page integer,
    replacement_indicator integer,
    information_text text,
    approved_flag boolean,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.publication_sigles (
    oid integer NOT NULL,
    code_type_id character varying(4),
    code character varying(10),
    publication_code character varying(1),
    publication_sigle character varying(20),
    validity_end_date timestamp without time zone,
    validity_start_date timestamp without time zone,
    created_at timestamp without time zone,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_associations (
    main_quota_definition_sid integer,
    sub_quota_definition_sid integer,
    relation_type character varying(255),
    coefficient numeric(16,5),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.quota_balance_events (
    quota_definition_sid integer,
    occurrence_timestamp timestamp without time zone,
    last_import_date_in_allocation date,
    old_balance numeric(15,3),
    new_balance numeric(15,3),
    imported_amount numeric(15,3),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_blocking_periods (
    quota_blocking_period_sid integer,
    quota_definition_sid integer,
    blocking_start_date date,
    blocking_end_date date,
    blocking_period_type integer,
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_critical_events (
    quota_definition_sid integer,
    occurrence_timestamp timestamp without time zone,
    critical_state character varying(255),
    critical_state_change_date date,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_definitions (
    quota_definition_sid integer,
    quota_order_number_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    quota_order_number_sid integer,
    volume numeric(12,2),
    initial_volume numeric(12,2),
    measurement_unit_code character varying(3),
    maximum_precision integer,
    critical_state character varying(255),
    critical_threshold integer,
    monetary_unit_code character varying(255),
    measurement_unit_qualifier_code character varying(1),
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    workbasket_type_of_quota text
);
CREATE TABLE public.quota_exhaustion_events (
    quota_definition_sid integer,
    occurrence_timestamp timestamp without time zone,
    exhaustion_date date,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_order_number_origin_exclusions (
    quota_order_number_origin_sid integer,
    excluded_geographical_area_sid integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_order_number_origins (
    quota_order_number_origin_sid integer,
    quota_order_number_sid integer,
    geographical_area_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    geographical_area_sid integer,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_order_numbers (
    quota_order_number_sid integer,
    quota_order_number_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    origin_quota boolean,
    description character varying(500),
    quota_scope character varying(100),
    quota_staging character varying(100)
);
CREATE TABLE public.quota_reopening_events (
    quota_definition_sid integer,
    occurrence_timestamp timestamp without time zone,
    reopening_date date,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_suspension_periods (
    quota_suspension_period_sid integer,
    quota_definition_sid integer,
    suspension_start_date date,
    suspension_end_date date,
    description text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.quota_unblocking_events (
    quota_definition_sid integer,
    occurrence_timestamp timestamp without time zone,
    unblocking_date date,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.quota_unsuspension_events (
    quota_definition_sid integer,
    occurrence_timestamp timestamp without time zone,
    unsuspension_date date,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer,
    added_by_id integer,
    added_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.regulation_documents (
    id integer NOT NULL,
    regulation_id text,
    regulation_role text,
    regulation_id_key text,
    regulation_role_key text,
    pdf_data text,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean
);
CREATE TABLE public.regulation_group_descriptions (
    regulation_group_id character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.regulation_groups (
    regulation_group_id character varying(255),
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.regulation_replacements (
    geographical_area_id character varying(255),
    chapter_heading character varying(255),
    replacing_regulation_role integer,
    replacing_regulation_id character varying(255),
    replaced_regulation_role integer,
    replaced_regulation_id character varying(255),
    measure_type_id character varying(3),
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.regulation_role_type_descriptions (
    regulation_role_type_id character varying(255),
    language_id character varying(5),
    description text,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.regulation_role_types (
    regulation_role_type_id integer,
    validity_start_date timestamp without time zone,
    validity_end_date timestamp without time zone,
    created_at timestamp without time zone,
    "national" boolean,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.rollbacks (
    id integer NOT NULL,
    user_id integer,
    date date,
    enqueued_at timestamp without time zone,
    reason text,
    keep boolean
);
CREATE TABLE public.schema_migrations (
    filename text NOT NULL
);
CREATE TABLE public.search_references (
    id integer NOT NULL,
    title text,
    referenced_id character varying(10),
    referenced_class character varying(10)
);
CREATE TABLE public.section_notes (
    id integer NOT NULL,
    section_id integer,
    content text
);
CREATE TABLE public.sections (
    id integer NOT NULL,
    "position" integer,
    numeral character varying(255),
    title character varying(255),
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone
);
CREATE TABLE public.tariff_update_conformance_errors (
    id integer NOT NULL,
    tariff_update_filename text NOT NULL,
    model_name text NOT NULL,
    model_primary_key text NOT NULL,
    model_values text,
    model_conformance_errors text
);
CREATE TABLE public.tariff_updates (
    filename character varying(30) NOT NULL,
    update_type character varying(50),
    state character varying(1),
    issue_date date,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    filesize integer,
    applied_at timestamp without time zone,
    last_error text,
    last_error_at timestamp without time zone,
    exception_backtrace text,
    exception_queries text,
    exception_class text
);
CREATE TABLE public.transmission_comments (
    comment_sid integer,
    language_id character varying(5),
    comment_text text,
    created_at timestamp without time zone,
    oid integer NOT NULL,
    operation character varying(1),
    operation_date timestamp without time zone,
    status text,
    workbasket_id integer,
    workbasket_sequence_number integer
);
CREATE TABLE public.users (
    id integer NOT NULL,
    uid text,
    name text,
    email text,
    version integer,
    permissions text,
    remotely_signed_out boolean,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    organisation_slug text,
    disabled boolean DEFAULT false,
    organisation_content_id text,
    approver_user boolean DEFAULT false
);
CREATE TABLE public.workbasket_items (
    id integer NOT NULL,
    workbasket_id integer,
    record_id integer,
    record_type text,
    status text,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    original_data jsonb DEFAULT '{}'::jsonb,
    record_key text,
    new_data jsonb DEFAULT '{}'::jsonb,
    changed_values jsonb DEFAULT '{}'::jsonb,
    validation_errors jsonb DEFAULT '{}'::jsonb,
    row_id text
);
CREATE TABLE public.workbaskets (
    id integer NOT NULL,
    title text,
    type text,
    status text,
    user_id integer,
    last_update_by_id integer,
    last_status_change_at timestamp without time zone,
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    operation_date timestamp without time zone,
    cross_checker_id integer,
    approver_id integer
);
CREATE TABLE public.workbaskets_events (
    id integer NOT NULL,
    workbasket_id integer,
    user_id integer,
    event_type text,
    description text,
    updated_at timestamp without time zone,
    created_at timestamp without time zone
);
CREATE TABLE public.xml_export_files (
    id integer NOT NULL,
    state character varying(1),
    updated_at timestamp without time zone,
    created_at timestamp without time zone,
    xml_data text,
    issue_date timestamp without time zone,
    date_filters text,
    base_64_data text,
    zip_data text,
    meta_data text,
    workbasket boolean DEFAULT true,
    validation_errors jsonb DEFAULT '{}'::jsonb,
    envelope_id integer
);
